# This workflow creates a new release branch and notifies consumer_devchat Slack about it.
name: Create a new release branch

# Controls when the action will run.
on:
  workflow_dispatch:
    inputs:
      versionName:
        description: 'Name of version  (e.g. 2.5.0)'
        required: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  createrelease:
    name: Create a new release
    runs-on: ubuntu-latest
    steps:
#      - name: Import GPG key
#              id: import_gpg
#              uses: crazy-max/ghaction-import-gpg@v2
#              with:
#                git_user_signingkey: true
#                git_commit_gpgsign: true
#              env:
#                GPG_PRIVATE_KEY: ${{ secrets.GITHUB_ACTIONS_GPG_KEY }}
#                PASSPHRASE: ${{ secrets.GITHUB_ACTIONS_GPG_PASS }}

      - name: Check out code
        uses: actions/checkout@v2
        with:
          persist-creddentials: false # For branch protection rules
      - name: Import bot's GPG key for signing commits
        id: import-gpg
        uses: crazy-max/ghaction-import-gpg@v4
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
          git_config_global: true
          git_user_signingkey: true
          git_commit_gpgsign: true
        
      - name: Create release branch
        run: git checkout -b release-${{ github.event.inputs.versionName }}
      - name: Initialize mandatory git config
        run: |
         git config user.name "GitHub Actions"
         git config user.email noreply@github.com
      - name: Make an empty commit
        run: |
         git config user.name github-actions
         git config user.email github-actions@github.com
         git commit --allow-empty --message "Created release-${{ github.event.inputs.versionName }}"
      - name: Push new branch
        run: git push origin release-${{ github.event.inputs.versionName }}
      - name: pull-request-main
        uses: repo-sync/pull-request@v2
        with:
          pr_allow_empty: true
          source_branch: "release-${{ github.event.inputs.versionName }}"
          destination_branch: "main"
          pr_title: "Pulling release-${{ github.event.inputs.versionName }} into main"
          pr_body: |
             This PR was automatically created in response to the create release workflow running for release-${{ github.event.inputs.versionName }}
             I've updated the version name and code commit: ${{ steps.make-commit.outputs.commit }}.
          github_token: ${{ secrets.GITHUB_TOKEN }}

